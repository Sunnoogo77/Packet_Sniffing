import socket
# from supabase import create_client
# from src.storage.models import TABLES

from src.storage.db import insert_into_table, fetch_data, update_last_seen
from src.storage.models import TABLES

def get_hostname(ip_adrr):
    """Essaie de r√©cup√©rer le hostname via une requ√™te DNS inverse"""
    try:
        hostname = socket.gethostbyaddr(ip_adrr)[0]
        return hostname
    except socket.herror:
        return "UNKNOWN"

def insert_packet(data):
    """Ins√®re un packet r√©seau dans la table realtime_traffic"""
    insert_into_table(TABLES["realtime_traffic"], data)

# def insert_known_device(mac_address, ip_address):
#     """Ajoute un appareil d√©tect√© dans known_devices uniquement s'il n'existe pas d√©j√†."""

#     existing_device = fetch_data(TABLES["known_devices"], conditions={"mac_address": ip_address})
#     print(existing_device)
    
#     if existing_device == []:
#         print(f"‚ö†Ô∏è L'appareil {mac_address} existe d√©j√† dans la base.")
#         return
    
#     hostname = get_hostname(ip_address)
#     data = {
#         "mac_address": mac_address,
#         "ip_address": ip_address,
#         "hostname": hostname
#     }
#     insert_into_table(TABLES["known_devices"], data)
#     print(f"üì° Nouvel appareil ajout√© √† la base de donn√©es : {data}")

def insert_known_device(mac_address, ip_address):
    """Ajoute un appareil d√©tect√© dans known_devices uniquement s'il n'existe pas d√©j√†."""

    existing_device = fetch_data(TABLES["known_devices"], conditions={"mac_address": mac_address})

    if existing_device is None:  # V√©rifier si fetch_data a retourn√© une erreur
        print(f"‚ùå Erreur lors de la v√©rification de l'appareil {mac_address}.")
        return

    if existing_device:  # V√©rifier si existing_device contient des r√©sultats
        # print(f"‚ö†Ô∏è L'appareil {mac_address} existe d√©j√† dans la base.")
        update_last_seen(mac_address)
        print("üì° Appareil d√©j√† existant, mise √† jour de last_seen.")
        return

    hostname = get_hostname(ip_address)
    data = {
        "mac_address": mac_address,
        "ip_address": ip_address,
        "hostname": hostname
    }
    insert_into_table(TABLES["known_devices"], data)
    print(f" Nouvel appareil ajout√© √† la base de donn√©es : {data}")


def insert_visited_site(src_ip, domain):
    """Ajoute un site vsit√© dasn visited_sites"""
    data = {
        "src_ip": src_ip,
        "domain": domain
    }
    insert_into_table(TABLES["visited_sites"], data)